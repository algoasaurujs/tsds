import{_ as e,o as t,c as o,O as d}from"./chunks/framework.52080d41.js";const g=JSON.parse('{"title":"LinkedList<T>.insertAfter","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"data-structures/LinkedList/methods/insertAfter.md","filePath":"data-structures/LinkedList/methods/insertAfter.md"}'),n={name:"data-structures/LinkedList/methods/insertAfter.md"},a=d('<h1 id="linkedlist-t-insertafter" tabindex="-1"><strong>LinkedList&lt;T&gt;.insertAfter</strong> <a class="header-anchor" href="#linkedlist-t-insertafter" aria-label="Permalink to &quot;**LinkedList&amp;lt;T&amp;gt;.insertAfter**&quot;">​</a></h1><h2 id="overloads" tabindex="-1"><strong><strong>Overloads</strong></strong> <a class="header-anchor" href="#overloads" aria-label="Permalink to &quot;****Overloads****&quot;">​</a></h2><table><thead><tr><th>Variant</th><th>Definition</th></tr></thead><tbody><tr><td>insertAfter(node: LinkedListNode&lt;T&gt;, newNode: T): void</td><td>Adds a new <em>value</em> after an existing <em>node</em> in the <code>LinkedList&lt;T&gt;</code>.</td></tr><tr><td>insertAfter(node: LinkedListNode&lt;T&gt;, newNode: LinkedListNode&lt;T&gt;): void</td><td>Adds a new <em>node</em> or after an existing <em>node</em> in the <code>LinkedList&lt;T&gt;</code>.</td></tr></tbody></table><h4 id="insertafter-node-linkedlistnode-t-newnode-t-void" tabindex="-1">insertAfter(node: LinkedListNode&lt;T&gt;, newNode: T): void <a class="header-anchor" href="#insertafter-node-linkedlistnode-t-newnode-t-void" aria-label="Permalink to &quot;insertAfter&amp;lpar;node&amp;colon; LinkedListNode&amp;lt;T&amp;gt;&amp;comma; newNode&amp;colon; T&amp;rpar;&amp;colon; void&quot;">​</a></h4><p>Adds a new <em>value</em> after an existing <em>node</em> in the <code>LinkedList&lt;T&gt;</code>.</p><h2 id="parameters" tabindex="-1"><strong><strong>Parameters</strong></strong> <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;****Parameters****&quot;">​</a></h2><p><strong>node<code>LinkedListNode&lt;T&gt;</code></strong>: The <code>LinkedListNode&lt;T&gt;</code> after which to insert <code>newNode</code>.</p><p><strong>newNode<code>T</code></strong>: The new <code>value</code> to add to the <code>LinkedList&lt;T&gt;</code>.</p><h4 id="insertafter-node-linkedlistnode-t-newnode-linkedlistnode-t-void" tabindex="-1">insertAfter(node: LinkedListNode&lt;T&gt;, newNode: LinkedListNode&lt;T&gt;): void <a class="header-anchor" href="#insertafter-node-linkedlistnode-t-newnode-linkedlistnode-t-void" aria-label="Permalink to &quot;insertAfter&amp;lpar;node&amp;colon; LinkedListNode&amp;lt;T&amp;gt;&amp;comma; newNode&amp;colon; LinkedListNode&amp;lt;T&amp;gt;&amp;rpar;&amp;colon; void&quot;">​</a></h4><p>Adds a new <em>node</em> or after an existing <em>node</em> in the <code>LinkedList&lt;T&gt;</code>.</p><h2 id="parameters-1" tabindex="-1"><strong><strong>Parameters</strong></strong> <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;****Parameters****&quot;">​</a></h2><p><strong>node<code>LinkedListNode&lt;T&gt;</code></strong>: The <code>LinkedListNode&lt;T&gt;</code> after which to insert <code>newNode</code>.</p><p><strong>newNode<code>LinkedListNode&lt;T&gt;</code></strong>: The new <code>LinkedListNode&lt;T&gt;</code> or <code>value</code> to add to the <code>LinkedList&lt;T&gt;</code>.</p>',13),r=[a];function i(s,l,c,m,h,L){return t(),o("div",null,r)}const k=e(n,[["render",i]]);export{g as __pageData,k as default};
