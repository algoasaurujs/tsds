import{_ as r,o as a,c as o,z as t,a as e}from"./chunks/framework.52080d41.js";const y=JSON.parse('{"title":"Stack<T>.toArray","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"data-structures/Stack/methods/toArray.md","filePath":"data-structures/Stack/methods/toArray.md"}'),n={name:"data-structures/Stack/methods/toArray.md"},s=t("h1",{id:"stack-t-toarray",tabindex:"-1"},[t("strong",null,"Stack<T>.toArray"),e(),t("a",{class:"header-anchor",href:"#stack-t-toarray","aria-label":'Permalink to "**Stack&lt;T&gt;.toArray**"'},"â€‹")],-1),i=t("p",null,[e("This implementation returns an array containing all the elements returned by this collection's iterator, in the same order, stored in consecutive elements of the array, starting with index "),t("code",null,"0"),e(". The length of the returned array is equal to the number of elements returned by the iterator, even if the size of this collection changes during iteration, as might happen if the collection permits concurrent modification during iteration. The "),t("code",null,"length"),e(" property is called only as an optimization hint; the correct result is returned even if the iterator returns a different number of elements.")],-1),c=[s,i];function l(d,h,u,m,f,p){return a(),o("div",null,c)}const g=r(n,[["render",l]]);export{y as __pageData,g as default};
