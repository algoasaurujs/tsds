import{_ as s,o as a,c as e,O as t}from"./chunks/framework.52080d41.js";const h=JSON.parse('{"title":"LinkedList<T>.get","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"data-structures/LinkedList/methods/get.md","filePath":"data-structures/LinkedList/methods/get.md"}'),n={name:"data-structures/LinkedList/methods/get.md"},o=t(`<h1 id="linkedlist-t-get" tabindex="-1"><strong>LinkedList&lt;T&gt;.get</strong> <a class="header-anchor" href="#linkedlist-t-get" aria-label="Permalink to &quot;**LinkedList&amp;lt;T&amp;gt;.get**&quot;">​</a></h1><p>Returns Node at the specified <em>index</em></p><h2 id="parameters" tabindex="-1"><strong><strong>Parameters</strong></strong> <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;****Parameters****&quot;">​</a></h2><p><strong>index<code>number</code></strong>: index of the Node <strong>starts from 0</strong></p><h2 id="returns" tabindex="-1"><strong><strong>Returns</strong></strong> <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;****Returns****&quot;">​</a></h2><p><code>null | LinkedListNode&lt;T&gt;</code></p><p><code>LinkedListNode</code> of the specified index, if index is less than length; otherwise, <code>null</code>.</p><h2 id="example" tabindex="-1"><strong><strong>Example</strong></strong> <a class="header-anchor" href="#example" aria-label="Permalink to &quot;****Example****&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> list </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LinkedList</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> item </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> nullItem </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// =&gt; null</span></span></code></pre></div><h2 id="remarks" tabindex="-1"><strong><strong>Remarks</strong></strong> <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;****Remarks****&quot;">​</a></h2><p>This method is an <strong>O(n)</strong> operation.</p>`,11),l=[o];function r(p,c,i,d,C,y){return a(),e("div",null,l)}const A=s(n,[["render",r]]);export{h as __pageData,A as default};
