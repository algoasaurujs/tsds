import{_ as s,o as e,c as a,O as t}from"./chunks/framework.52080d41.js";const D=JSON.parse('{"title":"LinkedList<T>.delete","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"data-structures/LinkedList/methods/delete.md","filePath":"data-structures/LinkedList/methods/delete.md"}'),o={name:"data-structures/LinkedList/methods/delete.md"},n=t(`<h1 id="linkedlist-t-delete" tabindex="-1"><strong>LinkedList&lt;T&gt;.delete</strong> <a class="header-anchor" href="#linkedlist-t-delete" aria-label="Permalink to &quot;**LinkedList&amp;lt;T&amp;gt;.delete**&quot;">​</a></h1><h2 id="overloads" tabindex="-1"><strong><strong>Overloads</strong></strong> <a class="header-anchor" href="#overloads" aria-label="Permalink to &quot;****Overloads****&quot;">​</a></h2><table><thead><tr><th>Variant</th><th>Definition</th></tr></thead><tbody><tr><td>delete(node: LinkedListNode&lt;T&gt;): void</td><td>Removes the first occurrence of a node from the <code>LinkedList&lt;T&gt;</code>.</td></tr><tr><td>delete(value: T): boolean</td><td>Removes the first occurrence of the specified value from the <code>LinkedList&lt;T&gt;</code>.</td></tr></tbody></table><h4 id="delete-node-linkedlistnode-t-void" tabindex="-1">delete(node: LinkedListNode&lt;T&gt;): void <a class="header-anchor" href="#delete-node-linkedlistnode-t-void" aria-label="Permalink to &quot;delete&amp;lpar;node&amp;colon; LinkedListNode&amp;lt;T&amp;gt;&amp;rpar;&amp;colon; void&quot;">​</a></h4><p>Removes the first occurrence of a node from the <code>LinkedList&lt;T&gt;</code>.</p><h2 id="parameters" tabindex="-1"><strong><strong>Parameters</strong></strong> <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;****Parameters****&quot;">​</a></h2><p><strong>node<code>LinkedListNode&lt;T&gt;</code></strong>: The <code>LinkedListNode&lt;T&gt;</code> to remove from the <code>LinkedList&lt;T&gt;</code>.</p><h2 id="example" tabindex="-1"><strong><strong>Example</strong></strong> <a class="header-anchor" href="#example" aria-label="Permalink to &quot;****Example****&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> list </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LinkedList</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#676E95;font-style:italic;">// =&gt; 4</span></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">delete</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#676E95;font-style:italic;">// =&gt; 3</span></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">last </span><span style="color:#676E95;font-style:italic;">// =&gt; LinkListNode(3)</span></span></code></pre></div><h2 id="remarks" tabindex="-1"><strong><strong>Remarks</strong></strong> <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;****Remarks****&quot;">​</a></h2><p>This method is an <strong>O(n)</strong> operation.</p><h4 id="delete-value-t-boolean" tabindex="-1">delete(value: T): boolean <a class="header-anchor" href="#delete-value-t-boolean" aria-label="Permalink to &quot;delete&amp;lpar;value&amp;colon; T&amp;rpar;&amp;colon; boolean&quot;">​</a></h4><p>Removes the first occurrence of the specified value from the <code>LinkedList&lt;T&gt;</code>.</p><h2 id="parameters-1" tabindex="-1"><strong><strong>Parameters</strong></strong> <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;****Parameters****&quot;">​</a></h2><p><strong>value<code>T</code></strong>: The value to remove from the <code>LinkedList&lt;T&gt;</code>.</p><h2 id="returns" tabindex="-1"><strong><strong>Returns</strong></strong> <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;****Returns****&quot;">​</a></h2><p><code>boolean</code></p><p><code>true</code> if the element containing value is successfully removed; otherwise, <code>false</code>. This method also returns <code>false</code> if value was not found in the original <code>LinkedList&lt;T&gt;</code>.</p><h2 id="example-1" tabindex="-1"><strong><strong>Example</strong></strong> <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;****Example****&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> list </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LinkedList</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#676E95;font-style:italic;">// =&gt; 4</span></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">delete</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#676E95;font-style:italic;">// =&gt; 3</span></span>
<span class="line"><span style="color:#A6ACCD;">list</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">last </span><span style="color:#676E95;font-style:italic;">// =&gt; LinkListNode(3)</span></span></code></pre></div><h2 id="remarks-1" tabindex="-1"><strong><strong>Remarks</strong></strong> <a class="header-anchor" href="#remarks-1" aria-label="Permalink to &quot;****Remarks****&quot;">​</a></h2><p>This method is an <strong>O(n)</strong> operation.</p>`,22),l=[n];function r(p,c,i,d,h,y){return e(),a("div",null,l)}const m=s(o,[["render",r]]);export{D as __pageData,m as default};
