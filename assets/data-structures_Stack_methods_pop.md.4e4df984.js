import{_ as s,o as a,c as t,O as n}from"./chunks/framework.8cfabee1.js";const D=JSON.parse('{"title":"Stack<T>.pop","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"data-structures/Stack/methods/pop.md","filePath":"data-structures/Stack/methods/pop.md"}'),o={name:"data-structures/Stack/methods/pop.md"},e=n(`<h1 id="stack-t-pop" tabindex="-1"><strong>Stack&lt;T&gt;.pop</strong> <a class="header-anchor" href="#stack-t-pop" aria-label="Permalink to &quot;**Stack&amp;lt;T&amp;gt;.pop**&quot;">​</a></h1><p>Removes and returns the object at the top of the <code>Stack&lt;T&gt;</code>.</p><h2 id="returns" tabindex="-1"><strong><strong>Returns</strong></strong> <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;****Returns****&quot;">​</a></h2><p><code>T</code></p><p>The object removed from the top of the <code>Stack&lt;T&gt;</code>.</p><h2 id="example" tabindex="-1"><strong><strong>Example</strong></strong> <a class="header-anchor" href="#example" aria-label="Permalink to &quot;****Example****&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> stack </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Stack</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// =&gt; 3</span></span>
<span class="line"><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#676E95;font-style:italic;">// =&gt; 2</span></span></code></pre></div><h2 id="remarks" tabindex="-1"><strong><strong>Remarks</strong></strong> <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;****Remarks****&quot;">​</a></h2><p>This method is an O(1) operation.</p>`,9),p=[e];function l(r,c,i,y,A,d){return a(),t("div",null,p)}const h=s(o,[["render",l]]);export{D as __pageData,h as default};
